fuente_unico.csv(alfabeticamente_nombre_funcion)
nombre_funcion,(paramentros,formales),nombre_modulo,linea_codigo,linea_codigo.....

comentaios.csv(alfabeticamente_nombre_funcion)
nombre_funcion,nombre_autor-[Autor: Juan Perez]-,ayuda- [Ayuda: Obtener deuda del cliente en base a la tasa de
actualizaciÃ³n y totales adeudados recibidos]-,"comentario adicionales"

ordenar para cada uno de los archivos dados al programa 
algoritmo de mezcla 
fuente_unico.csv and comentaios.csv obtener 

1)programar la deteccion de los bloque e instrucciones del codigo del codigo 

2)lista de funciones y ?(descripcion) #(relativo{no entiendo que es todo lo relativo}) 

3)Analizacion de reutilizacion de codigo
Programar tabla
generar analizar.txt

4)Arbol de invocacion (como se relacionan las funciones)

5)Informacion por Desarrollador(informacion sobre el desarrollo de la aplicacion)
Pantalla(autor-forma decendente-por linea de codigo)
generar participacion.txt
------------------------------------------------------Bloques_de_codigo----------------------------------------------------------------
def main():
    Pide cargar al inicio el archivo.txt
    #cagar_archivo -----> genera (1)fuente_unico.csv y (2)comentarios.csv 
    Al ya ser cargado pregunta por las opciones
    while respuesta != exit:
        if condicion (1,2,3,4)
            #1)Panel de funciones ---->(tabla con informacion del programa-if-for-anidaciones etc-) Break1:
            #2)Consulta de Funciones(lista de funcion a la espera de elegir una de ellas con caracter ?/#) Break2:
            #3)Analizador de Reutalizacion de codigo ----> muestra tabla de invocacion y genera anaizador.txt Break3:
            #4)Arbol de invocacion / genera y muestra la interaccion entre funciones Break4:
            #5)Informacion por desarrollador ----->muestra informacion del autor y genera participacion.txt Break5:
    
-------------------------------------------------------Modulo_de_carga-----------------------------------------------------------

Modulo Cargar_archivo():
def cargar_archivo():
    while(fin_de_archivos_desordenados):
        archivo = leer archivos
        ordenado = ordenar_archivos_alfabeticamente(archivo) 
        agregar_a_mezcla(ordenado)--->agraga a capeta o algun lugar los nuevos archivos preparados para mezclar
    mezcla_archivo()


def mezcla_archivos():------>#busca la carpeta de archivo ordenados y los mezcla--->produce (1) y (2)
    (3)codigo--------->tomas los archivos ordenados puestos probablemente en una carpeta 
                    cada uno de ellos con el codigo de mezcla y en vez de producir 1 como en clase 
                    produce 2 archivos nuevos (1) y (2)
    analizar_archivo()------>esta funcion selecciona si es comentario o participacion (probablemnte este adentro de (3)codigo
    pass
    pass


def analizar_archivo():
    if funcion:
        pass
        codigo----->agrega a fuente unico.csv
    elif cometario:
        pass
        codigo ---->agrega a comentario.csv

----------------------------------------------------Modulo_Panel_de_funciones---------------------------------------------------------
codigo de Modulo_Panel_de_funciones
pass
pass
pass
--------------------------------------------------Modulo_Consulta_de_Funciones--------------------------------------------------------
codigo de Modulo_Consulta_de_Funciones
pass
pass
pass
-------------------------------------------Modulo_Analizador_de_Reutalizacion_de_codigo-----------------------------------------------
codigo de Modulo_Analizador_de_Reutalizacion_de_codigo
pass
pass
pass
---------------------------------------------------Modulo_Arbol_de_invocacion---------------------------------------------------------
codigo de Modulo_Arbol_de_invocacion
pass
pass
pass
----------------------------------------------Modulo_Informacion por desarrollador----------------------------------------------------
codigo de Modulo_Informacion por desarrollador
pass
pass
pass



